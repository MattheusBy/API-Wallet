# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V1TransactionsBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, category: str=None, description: str=None, amount: int=None, kind: str=None):  # noqa: E501
        """V1TransactionsBody - a model defined in Swagger

        :param category: The category of this V1TransactionsBody.  # noqa: E501
        :type category: str
        :param description: The description of this V1TransactionsBody.  # noqa: E501
        :type description: str
        :param amount: The amount of this V1TransactionsBody.  # noqa: E501
        :type amount: int
        :param kind: The kind of this V1TransactionsBody.  # noqa: E501
        :type kind: str
        """
        self.swagger_types = {
            'category': str,
            'description': str,
            'amount': int,
            'kind': str
        }

        self.attribute_map = {
            'category': 'category',
            'description': 'description',
            'amount': 'amount',
            'kind': 'kind'
        }
        self._category = category
        self._description = description
        self._amount = amount
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt) -> 'V1TransactionsBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v1_transactions_body of this V1TransactionsBody.  # noqa: E501
        :rtype: V1TransactionsBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self) -> str:
        """Gets the category of this V1TransactionsBody.


        :return: The category of this V1TransactionsBody.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this V1TransactionsBody.


        :param category: The category of this V1TransactionsBody.
        :type category: str
        """

        self._category = category

    @property
    def description(self) -> str:
        """Gets the description of this V1TransactionsBody.


        :return: The description of this V1TransactionsBody.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this V1TransactionsBody.


        :param description: The description of this V1TransactionsBody.
        :type description: str
        """

        self._description = description

    @property
    def amount(self) -> int:
        """Gets the amount of this V1TransactionsBody.


        :return: The amount of this V1TransactionsBody.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount: int):
        """Sets the amount of this V1TransactionsBody.


        :param amount: The amount of this V1TransactionsBody.
        :type amount: int
        """

        self._amount = amount

    @property
    def kind(self) -> str:
        """Gets the kind of this V1TransactionsBody.


        :return: The kind of this V1TransactionsBody.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind: str):
        """Sets the kind of this V1TransactionsBody.


        :param kind: The kind of this V1TransactionsBody.
        :type kind: str
        """

        self._kind = kind
